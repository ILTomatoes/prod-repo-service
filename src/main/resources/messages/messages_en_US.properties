error.nexus.client.component=Component Id error
error.nexus.client.repo.type=Repository type error
error.nexus.client.repo.name.exist=Repository name, corresponding repository already exists
error.nexus.client.role.exist=Role ID corresponding to role already exists
error.nexus.client.user.exist=User ID corresponding to user already exists
error.nexus.client.nexus.not.conf=Nexus service information is not configured
error.nexus.client.nexus.user.pass.failed=Nexus username or password error
error.nexus.client.nexus.role.pri.not.assigned=nexus role corresponding operation permissions are not assigned
error.nexus.client.nexus.server.failed=nexus service is unavailable, please check the service
error.nexus.client.resource.not.exist=The corresponding resource no longer exists


error.nexus.not.select.file=Please select a file to upload
error.nexus.file.type=File type error
error.nexus.server.config.multi=There are multiple configurations of the nexus service, please contact the administrator to check
error.nexus.server.info.not.config=nexus service information is not configured, please contact the administrator to configure
error.nexus.repo.name.suffix=The warehouse name suffix is limited to the following data: {0}
error.nexus.repo.name.valid=Warehouse name: Only English, numbers, underscore, midline, and dot (.) Are allowed
error.nexus.allow.anonymous.not.empty=Whether to allow anonymous access cannot be empty
error.nexus.version.policy.not.empty=Version policy cannot be empty
error.nexus.write.policy.not.empty=Write policy cannot be empty
error.nexus.remote.url.not.empty=Remote warehouse address cannot be empty
error.nexus.remote.user.password.not.empty=Fill in the remote warehouse account, you must fill in the account password
error.nexus.repo.member.not.empty=Warehouse group member cannot be empty
error.nexus.maven.repo.type.error=Warehouse type error
error.nexus.maven.repo.not.update.other.pro=Cannot change the warehouse of other items
error.nexus.related.repo.not.admin=Please fill in users other than admin
error.nexus.repo.list.not.empty=Repository list cannot be empty
error.nexus.user.and.password.error=wrong user name or password
error.nexus.repo.already.related=Warehouse {0} is already associated and can no longer be associated
error.nexus.repo.related.error=The following warehouse association failed: {0}
error.nexus.repo.related.default.user.is.null=Associated warehouse: {0}, the default publishing user is empty
error.nexus.url.error=Incorrect address, for example: http://www.example.com
error.nexus.not.delete.component=Cannot delete data under this warehouse (only packages under self-built or associated warehouses can be deleted)
error.nexus.new.password.not.null=New password cannot be empty
error.nexus.old.password.not.null=Old password cannot be empty
error.nexus.not.change.other.repo.password=The corresponding warehouse is not under the current project, and the management user password cannot be changed
error.nexus.old.password.error=The original password is incorrect
error.nexus.default.role.is.null={0} The corresponding role of the warehouse does not exist
error.nexus.auth.repository.id.is.not.null=Can only assign permissions under the same warehouse at the same time
error.nexus.auth.already.exist=uthority has been assigned: {0}
error.nexus.user.not.exist=nexus user does not exist
error.nexus.user.forbidden=Insufficient user rights, no permission for the operation
error.nexus.auth.owner.not.delete=the auth of repository owner is not allowed to delete
error.nexus.auth.owner.not.update=the auth of repository owner is not allowed to update

#harbor.project
error.harbor.project.exist=the docker image repository has exist,please do not create again
error.harbor.project.get.harborId=the docker image repository has been created,but cannot get the repository id
error.harbor.project.not.exist=the docker image repository not exist,please check
error.harbor.project.StorageUnit.empty=StorageUnit is empty,please choose one
error.harbor.project.flag.value.not.in=the flag field is not in ['true','false'],please check:{0} {1}
error.harbor.project.StorageUnit.value.not.in=the StorageUnit field is not in ['KB','MB','GB','TB'],please check:{0} {1}
error.harbor.project.Severity.value.not.in=the Severity field is not in ['low','medium','high','creatical'],please check:{0} {1}
error.harbor.image.repoName.empty=image repoName is empty
error.harbor.auth.already.exist=authority has been assigned:{0}
error.harbor.organization.no.project=the organization has no project
error.harbor.auth.find.harborAuthId=the user has authority in harbor system,please contact admin
error.harbor.auth.owner.not.delete=the auth of docker repository owner is not allowed to delete!
error.harbor.auth.not.projectAdmin=the auth of user is not projectAdmin,not allowed to operate!
error.harbor.auth.null=the auth of user is null,not allowed to operate!
error.harbor.auth.owner.not.update=the auth of docker repository owner is not allowed to update!

#harbor.feign
error.feign.user.batch.select=Failed to batch select user
error.feign.user.select=Failed to select User
error.feign.user.selectUserByProjectId=Failed to select ProjectMember by projectId
error.feign.project.select=Failed to select Project
error.feign.project.select.empty=Project is empty in base-service
error.feign.user.select.empty=User is empty in base-service
error.feign.file.delete=Failed to delete file
error.feign.project.owner=Failed to acquire project's owner users
error.feign.appService.page=Failed to paging query appService
error.feign.appService.list.active=Failed to list query appService by active
error.feign.appService.list.ids=Failed to list query appService by ids
error.feign.appService.list.not.match=The batch query appService result not match the param ids

#harbor.statusCode
error.delete.project.412=the project contains repositories, can not be deleted
error.harbor.image.tag.copy.412=middleware: vulnerable handler: error: 10412(Precondition failed) : no scanner registration configured for project.

#harbor.robot
error.harbor.robot.repository.select=failed to select repository,please check the projectId {0}
error.harbor.robot.action.wrong=the robot action setting is wrong
error.harbor.robot.name.empty=the name of robot is empty,please check the project Id {0}
error.harbor.robot.projectId.empty=the project id of robot is empty,please check the project Id {0}
error.harbor.robot.name.different=the robot account name in the system is different from the harbor
error.harbor.robot.enabled.different=the harbor robot account is disabled, but the system enabled
error.harbor.robot.endDate.different=the robot account endDate in the system is different from the harbor
error.harbor.robot.harborRobotId.empty=the harbor robot account id is empty
error.harbor.robot.delete.expired=delete invalid robot account fail
error.harbor.robot.not.exist=the harbor robot account not exist

#harbor.customRepo
error.harbor.custom.repo.email.not.equal=the email of user is not equal to customize repository
error.harbor.custom.repo.no.match.project=no matching project in the customize repository
error.harbor.custom.repo.not.exist=the custom repo not exist
error.harbor.custom.repo.repoName.empty=customize repoName is empty
error.harbor.custom.repo.toRelate.appService.not.select=error waiting for associated appService
error.harbor.repo.service.relation.not.exist=the relation not exist
error.harbor.repo.service.relation.exist=the relation is exist
error.harbor.repo.service.relation.duplicate=the relation is duplicate
error.harbor.custom.repo.share.exist=the proeject share custom repo exist
error.harbor.custom.repo.share.duplicate=the proeject share custom repo duplicate

error.user.newPwd.same.oldPwd=the new password can not be same with the old one
error.user.pwd.pattern=the password or secret must longer than 8 chars with at least 1 uppercase letter, 1 lowercase letter and 1 number

